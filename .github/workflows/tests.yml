name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Create cookies file
      env:
        NETSCAPE_COOKIE_FILE: ${{ secrets.NETSCAPE_COOKIE_FILE }}
      run: |
        mkdir -p config
        echo "$NETSCAPE_COOKIE_FILE" > src/config/cookies.txt

    - name: Run tests
      env:
        APP_PORT: 8000
        REDIS_PORT: 6379
        REDIS_PASSWORD: testpassword
      run: |
        poetry run pytest --junitxml=test-results/pytest-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results/pytest-results.xml
      if: ${{ always() }}
